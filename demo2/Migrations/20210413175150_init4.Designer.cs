// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using demo1;

namespace demo1.Migrations
{
    [DbContext(typeof(Sensor_Context))]
    [Migration("20210413175150_init4")]
    partial class init4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "6.0.0-preview.3.21201.2")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("demo1.Device", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("devices");
                });

            modelBuilder.Entity("demo1.Sensorvalue", b =>
                {
                    b.Property<int>("device_id")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("time")
                        .HasColumnType("timestamp without time zone");

                    b.HasIndex("device_id");

                    b.ToTable("Sensorvalue");

                    b.HasDiscriminator<int>("quantity");
                });

            modelBuilder.Entity("demo1.Position_GCS", b =>
                {
                    b.HasBaseType("demo1.Sensorvalue");

                    b.Property<float>("latitude")
                        .HasColumnType("real");

                    b.Property<float>("longitude")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("demo1.Temperature", b =>
                {
                    b.HasBaseType("demo1.Sensorvalue");

                    b.Property<float>("temperature")
                        .HasColumnType("real");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("demo1.Sensorvalue", b =>
                {
                    b.HasOne("demo1.Device", "device")
                        .WithMany()
                        .HasForeignKey("device_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("device");
                });
#pragma warning restore 612, 618
        }
    }
}
